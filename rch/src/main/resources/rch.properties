rch.credentials.user_id=
rch.credentials.password=

rch.credentials.project_id=3
rch.credentials.dtid=0
# This schedules the job at 18:02 everyday(which should fall in the 6-8pm social hours window for RCH)
rch.sync.cron=0 2 18 * * ? *

# since there are around 110 webservices now -- splitting it into intervals of 3 mins
rch.sync.cron.mother=0 2 18 * * ? *
rch.sync.cron.child=0 5 18 * * ? *
rch.sync.cron.district=0 8 18 * * ? *
rch.sync.cron.taluka=0 11 18 * * ? *
rch.sync.cron.healthblock=0 14 18 * * ? *
rch.sync.cron.village=0 17 18 * * ? *
rch.sync.cron.healthfacility=0 20 18 * * ? *
rch.sync.cron.healthsubfacility=0 23 18 * * ? *
rch.sync.cron.talukahealthblock=0 26 18 * * ? *
rch.sync.cron.villagesubfacility=0 29 18 * * ? *
rch.sync.cron.asha=0 32 18 * * ? *

# These schedules are for reading the data from files for mother, child and asha.
rch.mother.sync.cron=0 0 6 * * ? *
rch.child.sync.cron=0 0 11 * * ? *
rch.asha.sync.cron=0 20 20 * * ? *
rch.location.sync.cron=0 30 19 * * ? *


# Separate state ids with comma, no space
# NOTE: We only want UP, UK, Jharkhand & Odisha for Phase 1 since MP & Rajasthan can only have high priority districts,
# which will be a manual L1/L2 process since we cannot filter by districts in the RCH data feed
rch.state_ids=2,5,6,7,9,10,18,19,20,21,22,23,16,1,4

# Leave endpoint as empty/null to use default from wsdl
rch.endpointUrl=

# Days to pull data for. This will always be 1 to signify yesterday, unless there's a catastrophic failure where we need
# to pull more than 1 day of data at a time
rch.days_to_pull=1

# List of states to filter for
rch.hpd.states=23

# HPD codes for state 23 - MADHYA PRADESH
rch.hpd.state23=8,9,10,11,12,13,15,28,34,41,42,48,49,50,51,52,53,21,32,33,26,23,43,4,25,22,54,38,27,3,35,47,31,20,40,2,6,44,39,36,45,5,46,56,18,1,55

#code for type of user to be pulled
rch.mother=1
rch.child=2
rch.asha=3
rch.taluka=4
rch.healthBlock=5
rch.talukaHealthBlock=6
rch.healthFacility=7
rch.healthSubFacility=8
rch.villageHealthSubFacility=9
rch.village=10
rch.district=11

#local directory where RCH response file should be generated
rch.local_response_dir=/usr/local/RCH/rch-records-local

#remote directory where RCH response file should be copied to
rch.remote_response_dir=/usr/local/RCH/rch-records-remote

#remote directory where RCH response file should be copied to
rch.remote_response_dir_xml =/usr/local/RCH/rch-records-remote/xml

#remote directory where RCH response file should be copied to
rch.remote_response_dir_csv =/usr/local/RCH/rch-records-remote/csv

#remote directory where location files should be kept for import
rch.remote_response_dir_locations=/usr/local/RCH/rch-location-records

#directory where csv file for loc update should be copied to
rch.loc_update_dir=/usr/local/RCH/loc_update_dir/

rch.scp_timeout=60000

#parameter for location API
rch.location.username=don'tsaythemagicword
rch.location.api_token=don'tsaythemagicword
rch.location.time_stamp=2011-01-01
rch.location.district_code=0
rch.location.taluka_code=0
rch.location.healthblock_id=0
rch.location.health_facility_type=0
rch.location.healthfacilityid=0
rch.location.healthsubfacilityid=0
rch.location.village_id=0

#type id in parameter
rch.typeid.district=1
rch.typeid.sub_district=2
rch.typeid.village=3
rch.typeid.health_block=4
rch.typeid.health_facility=5
rch.typeid.health_sub_facility=6
rch.typeid.health_village=7
rch.typeid.taluka_health_block=11

#base url for location's API
rch.location.base_url=https://localhost:8080/Api_MWMIS/RCH_API/LocationMaster



rch.api.first=https://localhost:8080/nic/rch/encrypttext
rch.api.second=https://localhost:8080/nic/rch/beneficiarydata_rel_test
rch.api.third=https://localhost:8080/nic/rch/decrypttext
rch.api.token=https://localhost:8080/nic/rch//oauth2/token

rch.firstapi.securecode=don'tsaythemagicword

rch.client.id=don'tsaythemagicword
rch.client.secret=don'tsaythemagicword

rch.folder.tmp=/usr/local/tmp

rch.folder.tmp.remote=/usr/local/tmp/

rch.remote.url=


rch.location.second_api=https://localhost:8080/nic/rch/location_master_rel_test
